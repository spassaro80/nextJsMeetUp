{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\00070261\\\\React Projects\\\\nextJsMeetUp\\\\pages\\\\[meetUpId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetup.image,\n    id: props.meetup.id,\n    title: props.meetup.title,\n    address: props.meetup.address,\n    description: props.meetup.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n};\n\nexport default MeetupDetails;\nexport async function getStaticPaths() {\n  // Recuperar todos los path por un async call\n  const client = await MongoClient.connect('mongodb+srv://spassaro:spassaro@meetups.omufkrd.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetUpsCollection = db.collection('meetups');\n  const meetUps = await meetUpsCollection.find({}, {\n    _id: 1\n  }).toArray(); //Selecciona de la collection de mongoDB solo los ids\n\n  return {\n    fallback: false,\n    paths: meetUps.map(meetup => ({\n      params: {\n        meetUpId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetUpId = context.params.meetUpId; // fetch data from an API\n\n  const client = await MongoClient.connect('mongodb+srv://spassaro:spassaro@meetups.omufkrd.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetUpsCollection = db.collection('meetups');\n  const selectedMeetUp = await meetUpsCollection.findOne({\n    _id: ObjectId(meetUpId)\n  }); //Selecciona el meetUp con el ObjectId = a meetuId\n\n  return {\n    props: {\n      meetup: {\n        id: selectedMeetUp._id.toString(),\n        image: selectedMeetUp.image,\n        title: selectedMeetUp.title,\n        description: selectedMeetUp.description,\n        address: selectedMeetUp.address\n      },\n      revalidate: 1\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/00070261/React Projects/nextJsMeetUp/pages/[meetUpId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","meetup","image","id","title","address","description","getStaticPaths","client","connect","db","meetUpsCollection","collection","meetUps","find","_id","toArray","fallback","paths","map","params","meetUpId","toString","getStaticProps","context","selectedMeetUp","findOne","revalidate"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,sBAAO,QAAC,YAAD;AACP,IAAA,KAAK,EAAIA,KAAK,CAACC,MAAN,CAAaC,KADf;AAEP,IAAA,EAAE,EAAIF,KAAK,CAACC,MAAN,CAAaE,EAFZ;AAGP,IAAA,KAAK,EAAIH,KAAK,CAACC,MAAN,CAAaG,KAHf;AAIP,IAAA,OAAO,EAAIJ,KAAK,CAACC,MAAN,CAAaI,OAJjB;AAKP,IAAA,WAAW,EAAIL,KAAK,CAACC,MAAN,CAAaK;AALrB;AAAA;AAAA;AAAA;AAAA,UAAP;AAOH,CARD;;AAUA,eAAeP,aAAf;AAGA,OAAO,eAAeQ,cAAf,GAAgC;AAGnC;AACA,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,0FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA3B,EAAoCC,OAApC,EAAtB,CATmC,CASiC;;AACpE,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAYlB,MAAM,KAAK;AAACmB,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAEpB,MAAM,CAACc,GAAP,CAAWO,QAAX;AAAX;AAAT,KAAL,CAAlB;AAFJ,GAAP;AAIH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAE1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC,CAF0C,CAI1C;;AACA,QAAMb,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,0FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMa,cAAc,GAAG,MAAMd,iBAAiB,CAACe,OAAlB,CAA0B;AAACX,IAAAA,GAAG,EAACjB,QAAQ,CAACuB,QAAD;AAAb,GAA1B,CAA7B,CAR0C,CAQuC;;AAIjF,SAAO;AACLrB,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EACN;AACEE,QAAAA,EAAE,EAAEsB,cAAc,CAACV,GAAf,CAAmBO,QAAnB,EADN;AAEEpB,QAAAA,KAAK,EAAEuB,cAAc,CAACvB,KAFxB;AAGEE,QAAAA,KAAK,EAAEqB,cAAc,CAACrB,KAHxB;AAIEE,QAAAA,WAAW,EAAEmB,cAAc,CAACnB,WAJ9B;AAKED,QAAAA,OAAO,EAAEoB,cAAc,CAACpB;AAL1B,OAFK;AASPsB,MAAAA,UAAU,EAAE;AATL;AADF,GAAP;AAaD","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nconst MeetupDetails = (props) => {\r\n    return <MeetupDetail\r\n    image = {props.meetup.image}\r\n    id = {props.meetup.id}\r\n    title = {props.meetup.title}\r\n    address = {props.meetup.address}\r\n    description = {props.meetup.description}\r\n    />\r\n}\r\n\r\nexport default MeetupDetails\r\n\r\n\r\nexport async function getStaticPaths() {\r\n\r\n\r\n    // Recuperar todos los path por un async call\r\n    const client = await MongoClient.connect('mongodb+srv://spassaro:spassaro@meetups.omufkrd.mongodb.net/?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n\r\n    const meetUpsCollection = db.collection('meetups');\r\n\r\n    const meetUps = await meetUpsCollection.find({}, {_id:1}).toArray() //Selecciona de la collection de mongoDB solo los ids\r\n    return {\r\n        fallback: false,\r\n        paths: meetUps.map(meetup => ({params: {meetUpId: meetup._id.toString()}}))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    \r\n    const meetUpId = context.params.meetUpId\r\n\r\n    // fetch data from an API\r\n    const client = await MongoClient.connect('mongodb+srv://spassaro:spassaro@meetups.omufkrd.mongodb.net/?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n    const meetUpsCollection = db.collection('meetups');\r\n    const selectedMeetUp = await meetUpsCollection.findOne({_id:ObjectId(meetUpId)}) //Selecciona el meetUp con el ObjectId = a meetuId\r\n\r\n\r\n\r\n    return {\r\n      props: {\r\n        meetup:     \r\n        {        \r\n          id: selectedMeetUp._id.toString(),\r\n          image: selectedMeetUp.image,\r\n          title: selectedMeetUp.title,\r\n          description: selectedMeetUp.description,\r\n          address: selectedMeetUp.address\r\n        },\r\n      revalidate: 1\r\n      }\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}