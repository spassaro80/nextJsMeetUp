{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\00070261\\\\React Projects\\\\nextJsMeetUp\\\\pages\\\\[meetUpId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetup.image,\n    id: props.meetup.id,\n    title: props.meetup.title,\n    address: props.meetup.address,\n    description: props.meetup.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/00070261/React Projects/nextJsMeetUp/pages/[meetUpId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetup","image","id","title","address","description"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,sBAAO,QAAC,YAAD;AACP,IAAA,KAAK,EAAIA,KAAK,CAACC,MAAN,CAAaC,KADf;AAEP,IAAA,EAAE,EAAIF,KAAK,CAACC,MAAN,CAAaE,EAFZ;AAGP,IAAA,KAAK,EAAIH,KAAK,CAACC,MAAN,CAAaG,KAHf;AAIP,IAAA,OAAO,EAAIJ,KAAK,CAACC,MAAN,CAAaI,OAJjB;AAKP,IAAA,WAAW,EAAIL,KAAK,CAACC,MAAN,CAAaK;AALrB;AAAA;AAAA;AAAA;AAAA,WAAP;AAOH,CARD;;KAAMP,a;;AAUN,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nconst MeetupDetails = (props) => {\r\n    return <MeetupDetail\r\n    image = {props.meetup.image}\r\n    id = {props.meetup.id}\r\n    title = {props.meetup.title}\r\n    address = {props.meetup.address}\r\n    description = {props.meetup.description}\r\n    />\r\n}\r\n\r\nexport default MeetupDetails\r\n\r\n\r\nexport async function getStaticPaths() {\r\n\r\n\r\n    // Recuperar todos los path por un async call\r\n    const client = await MongoClient.connect('mongodb+srv://spassaro:spassaro@meetups.omufkrd.mongodb.net/?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n\r\n    const meetUpsCollection = db.collection('meetups');\r\n\r\n    const meetUps = await meetUpsCollection.find({}, {_id:1}).toArray() //Selecciona de la collection de mongoDB solo los ids\r\n    return {\r\n        fallback: false,\r\n        paths: meetUps.map(meetup => ({params: {meetUpId: meetup._id.toString()}}))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    \r\n    const meetUpId = context.params.meetUpId\r\n\r\n    // fetch data from an API\r\n    const client = await MongoClient.connect('mongodb+srv://spassaro:spassaro@meetups.omufkrd.mongodb.net/?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n    const meetUpsCollection = db.collection('meetups');\r\n    const selectedMeetUp = await meetUpsCollection.findOne({_id:ObjectId(meetUpId)}) //Selecciona el meetUp con el ObjectId = a meetuId\r\n\r\n\r\n\r\n    return {\r\n      props: {\r\n        meetup:     \r\n        {        \r\n          id: selectedMeetUp._id.toString(),\r\n          image: selectedMeetUp.image,\r\n          title: selectedMeetUp.title,\r\n          description: selectedMeetUp.description,\r\n          address: selectedMeetUp.address\r\n        },\r\n      revalidate: 1\r\n      }\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}